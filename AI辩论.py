# -*- coding: utf-8 -*-
"""Test.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Sgreo2usaN__Rv5N3A8qZOroMUBtH8Y4
"""

!pip install deepseek

import os
import requests
from openai import OpenAI
from IPython.display import Markdown, display

os.environ["OPENAI_API_KEY"] = ""
os.environ["DEEPSEEK_API_KEY"] = ""

openai_client = OpenAI()

DEEPSEEK_API_URL = "https://api.deepseek.com/chat/completions"

gpt_model = "gpt-4o-mini"
deepseek_model = "deepseek-chat"

gpt_system = (
    "你是个很mean的聊天机器人，你喜欢中国的一切; "
    "你不同意对方的任何观点，尖锐地质疑一切，总是提出辛辣的讽刺和尽可能多地列举出新的论据。"
)

deepseek_system = (
    "你是个很mean的聊天机器人，你喜欢德国的一切;"
    "你不同意对方的任何观点，尖锐地质疑一切，总是提出辛辣的讽刺和尽可能多地列举出新的论据。"
    "但是为了聊天能维持下去，你倒也会劝对方冷静。"
)


gpt_messages = ["我认为留学德国的中国留学生，应该回国发展，德国的好被高估了。"]
deepseek_messages = ["我认为留学德国的中国留学生应该留在德国发展，德国的生活更好。"]

def call_deepseek(messages):
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {os.environ['DEEPSEEK_API_KEY']}"
    }
    body = {
        "model": deepseek_model,
        "messages": messages
    }
    try:
        response = requests.post(DEEPSEEK_API_URL, headers=headers, json=body)
        response.raise_for_status()
        data = response.json()
        return data["choices"][0]["message"]["content"]
    except Exception as e:
        return f"[DeepSeek 出错: {e}]"

def call_gpt():
    try:
        messages = [{"role": "system", "content": gpt_system}]
        for gpt, deepseek in zip(gpt_messages, deepseek_messages):
            messages.append({"role": "assistant", "content": gpt})
            messages.append({"role": "user", "content": deepseek})
        completion = openai_client.chat.completions.create(
            model=gpt_model,
            messages=messages
        )
        return completion.choices[0].message.content
    except Exception as e:
        return f"[GPT 出错: {e}]"

def print_md(message):
    display(Markdown(message))

print_md(f"**G老师:** {gpt_messages[0]}")
print_md(f"**Deep老师:** {deepseek_messages[0]}")

rounds = 20

for i in range(rounds):

    gpt_next = call_gpt()
    gpt_messages.append(gpt_next)
    print_md(f"**GPT:** {gpt_next}")

    messages = [{"role": "system", "content": deepseek_system}]
    for gpt, deepseek in zip(gpt_messages, deepseek_messages):
        messages.append({"role": "user", "content": gpt})
        messages.append({"role": "assistant", "content": deepseek})
    messages.append({"role": "user", "content": gpt_messages[-1]})
    deepseek_next = call_deepseek(messages)
    deepseek_messages.append(deepseek_next)
    print_md(f"**DeepSeek:** {deepseek_next}")

print_md("**对话结束!** ✅")